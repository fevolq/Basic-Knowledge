#!/usr/bin/python
# Filename：函数形参的可变与不可变类型.py

#变量是否局部，还取决于变量的性质，
#是不可变类型（整数、字符串、元组），还是可变类型（列表、字典）

def func(x):        #变量是不可变型（整数）
    print('x is',x,"函数内调用的第一步内存：",id(x))   #输出形参x
    x = 2                       #将2赋值给形参x，新生成了一个对象
    print('将本地的x更改为',x,"此时的内存地址：",id(x))
    #函数内的x赋值只能作用于这个函数块，即只能作用于第二个输出

x = 50                          #此物理行处于函数块之外
print("初始的内存地址：",id(x))
func(x)                        
print('x仍是',x,"最后的内存地址：",id(x))     #仍然指向主块中的对象
#这一步的输出处于主块，由于函数的变量是不可变类型，所以不受函数内部的x赋值影响


print("\n")


def a(l):       #变量是可变类型（列表）
    print("在函数内未改变变量",l,id(l))
    l.append(1)                             #将原始列表进行了更改
    print("在函数内更改了变量",l,id(l))
    return

l = [0,0,0]
print("未调用函数时",l,id(l))
a(l)
print("函数调用完成后的主块",l,id(l))


#不可变类型的变量：调用函数时，若改变了参数，则是将值复制给了函数内的变量，即新生成了一个对象
#可变类型的变量：调用函数时，一但参数改变，那么原始的参数也会跟着变。
#可根据内存地址（id）判断
